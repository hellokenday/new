{
  "name": "rollup-plugin-uglify",
  "version": "6.0.3",
  "description": "Rollup plugin to minify generated bundle",
  "main": "index.js",
  "files": [
    "index.js",
    "transform.js"
  ],
  "scripts": {
    "test": "jest --runInBand",
    "prepublish": "yarn test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TrySound/rollup-plugin-uglify.git"
  },
  "keywords": [
    "rollup",
    "rollup-plugin",
    "uglify",
    "minify"
  ],
  "author": {
    "name": "Bogdan Chadkin",
    "email": "trysound@yandex.ru"
  },
  "license": "MIT",
  "dependencies": {
    "@babel/code-frame": "^7.0.0",
    "jest-worker": "^24.0.0",
    "serialize-javascript": "^1.9.0",
    "uglify-js": "^3.4.9"
  },
  "peerDependencies": {
    "rollup": ">=0.66.0 <2"
  },
  "devDependencies": {
    "@babel/core": "^7.2.2",
    "@babel/preset-env": "^7.3.1",
    "babel-jest": "^24.0.0",
    "jest": "^24.0.0",
    "prettier": "^1.16.1",
    "rollup": "^1.1.2"
  },
  "readme": "# rollup-plugin-uglify [![Travis Build Status][travis-img]][travis]\n\n[travis-img]: https://travis-ci.org/TrySound/rollup-plugin-uglify.svg\n[travis]: https://travis-ci.org/TrySound/rollup-plugin-uglify\n\n[Rollup](https://github.com/rollup/rollup) plugin to minify generated bundle. Uses [UglifyJS](https://github.com/mishoo/UglifyJS2) under the hood. There are a few improvements over native uglify:\n\n* uglify is run in worker for every chunk\n* errors are displayed with [babel code frame](https://babeljs.io/docs/en/next/babel-code-frame.html)\n\n_Note: uglify-js is able to transpile only es5 syntax. If you want to transpile es6+ syntax use [terser](https://github.com/TrySound/rollup-plugin-terser) instead_\n\n## Install\n\n```sh\nyarn add rollup-plugin-uglify --dev\n```\n\n*Note: this package requires rollup@0.66 and higher*\n\n## Usage\n\n```js\nimport { rollup } from \"rollup\";\nimport { uglify } from \"rollup-plugin-uglify\";\n\nrollup({\n  input: \"main.js\",\n  plugins: [uglify()]\n});\n```\n\n## Options\n\n```js\nuglify(options);\n```\n\n`options` - [uglifyJS API options](https://github.com/mishoo/UglifyJS2/blob/master/README.md#minify-options)\n\n`options.sourcemap: boolean`\n\nGenerates source maps and passes them to rollup. Defaults to `true`.\n\n`options.numWorkers: number`\n\nAmount of workers to spawn. Defaults to the number of CPUs minus 1.\n\n\n## Examples\n\n### Comments\n\nIf you'd like to preserve comments (for licensing for example), then you can specify a function to do this like so:\n\n```js\nuglify({\n  output: {\n    comments: function(node, comment) {\n      if (comment.type === \"comment2\") {\n        // multiline comment\n        return /@preserve|@license|@cc_on/i.test(comment.value);\n      }\n      return false;\n    }\n  }\n});\n```\n\nAlternatively, you can also choose to keep all comments (e.g. if a licensing header has already been prepended by a previous rollup plugin):\n\n```js\nuglify({\n  output: {\n    comments: \"all\"\n  }\n});\n```\n\nSee [UglifyJS documentation](https://github.com/mishoo/UglifyJS2/blob/master/README.md) for further reference.\n\n# License\n\nMIT Â© [Bogdan Chadkin](mailto:trysound@yandex.ru)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/TrySound/rollup-plugin-uglify/issues"
  },
  "homepage": "https://github.com/TrySound/rollup-plugin-uglify#readme",
  "_id": "rollup-plugin-uglify@6.0.3",
  "_from": "rollup-plugin-uglify@>=6.0.1 <6.1.0"
}
